Grammar

    0 $accept: program "end file"

    1 program: constdecls forstatement

    2 constdecls: constdecls constdecl
    3           | ε

    4 constdecl: type id ASSIGN intlit SEMICOL
    5          | type id ASSIGN LCURLY intlist RCURLY SEMICOL

    6 intlist: intlit COMMA intlist
    7        | intlit
    8        | ε

    9 forstatement: FOR LPAREN constdecl expr SEMICOL unarystmt RPAREN LCURLY forstatement RCURLY
   10             | FOR LPAREN constdecl expr SEMICOL unarystmt RPAREN LCURLY outstatements RCURLY

   11 outstatements: outstatements outstatement
   12              | outstatement

   13 outstatement: OUT ASSIGN expr SEMICOL

   14 type: INT

   15 expr: expr CROSS expr
   16     | expr LESS expr
   17     | expr STAR expr
   18     | term

   19 unarystmt: loc POSTINC

   20 term: factor
   21     | LPAREN expr RPAREN

   22 factor: intlit
   23       | loc

   24 intlit: INTLITERAL

   25 loc: id
   26    | id LBRACKET id RBRACKET

   27 id: ID


Terminals, with rules where they appear

    "end file" (0) 0
    error (256)
    ASSIGN <DTL::Token *> (258) 4 5 13
    ID <DTL::IDToken *> (259) 27
    INT <DTL::Token *> (260) 14
    INTLITERAL <DTL::IntLitToken *> (261) 24
    LCURLY <DTL::Token *> (262) 5 9 10
    LESS <DTL::Token *> (263) 16
    LPAREN <DTL::Token *> (264) 9 10 21
    CROSS <DTL::Token *> (265) 15
    POSTINC <DTL::Token *> (266) 19
    RCURLY <DTL::Token *> (267) 5 9 10
    RPAREN <DTL::Token *> (268) 9 10 21
    SEMICOL <DTL::Token *> (269) 4 5 9 10 13
    STAR <DTL::Token *> (270) 17
    FOR <DTL::Token *> (271) 9 10
    OUT <DTL::Token *> (272) 13
    COMMA <DTL::Token *> (273) 6
    LBRACKET <DTL::Token *> (274) 26
    RBRACKET <DTL::Token *> (275) 26


Nonterminals, with rules where they appear

    $accept (21)
        on left: 0
    program <DTL::ProgramNode*> (22)
        on left: 1
        on right: 0
    constdecls <std::vector<DTL::StmtNode*>> (23)
        on left: 2 3
        on right: 1 2
    constdecl <DTL::StmtNode*> (24)
        on left: 4 5
        on right: 2 9 10
    intlist <std::vector<IntLitNode*>> (25)
        on left: 6 7 8
        on right: 5 6
    forstatement <DTL::ForStmtNode*> (26)
        on left: 9 10
        on right: 1 9
    outstatements <std::vector<DTL::StmtNode*>> (27)
        on left: 11 12
        on right: 10 11
    outstatement <DTL::StmtNode*> (28)
        on left: 13
        on right: 11 12
    type <DTL::TypeNode*> (29)
        on left: 14
        on right: 4 5
    expr <DTL::ExpNode*> (30)
        on left: 15 16 17 18
        on right: 9 10 13 15 16 17 21
    unarystmt <DTL::StmtNode*> (31)
        on left: 19
        on right: 9 10
    term <DTL::ExpNode*> (32)
        on left: 20 21
        on right: 18
    factor <DTL::ExpNode*> (33)
        on left: 22 23
        on right: 20
    intlit <DTL::IntLitNode*> (34)
        on left: 24
        on right: 4 6 7 22
    loc <DTL::LocNode*> (35)
        on left: 25 26
        on right: 19 23
    id <DTL::IDNode*> (36)
        on left: 27
        on right: 4 5 25 26


State 0

    0 $accept: • program "end file"

    $default  reduce using rule 3 (constdecls)

    program     go to state 1
    constdecls  go to state 2


State 1

    0 $accept: program • "end file"

    "end file"  shift, and go to state 3


State 2

    1 program: constdecls • forstatement
    2 constdecls: constdecls • constdecl

    INT  shift, and go to state 4
    FOR  shift, and go to state 5

    constdecl     go to state 6
    forstatement  go to state 7
    type          go to state 8


State 3

    0 $accept: program "end file" •

    $default  accept


State 4

   14 type: INT •

    $default  reduce using rule 14 (type)


State 5

    9 forstatement: FOR • LPAREN constdecl expr SEMICOL unarystmt RPAREN LCURLY forstatement RCURLY
   10             | FOR • LPAREN constdecl expr SEMICOL unarystmt RPAREN LCURLY outstatements RCURLY

    LPAREN  shift, and go to state 9


State 6

    2 constdecls: constdecls constdecl •

    $default  reduce using rule 2 (constdecls)


State 7

    1 program: constdecls forstatement •

    $default  reduce using rule 1 (program)


State 8

    4 constdecl: type • id ASSIGN intlit SEMICOL
    5          | type • id ASSIGN LCURLY intlist RCURLY SEMICOL

    ID  shift, and go to state 10

    id  go to state 11


State 9

    9 forstatement: FOR LPAREN • constdecl expr SEMICOL unarystmt RPAREN LCURLY forstatement RCURLY
   10             | FOR LPAREN • constdecl expr SEMICOL unarystmt RPAREN LCURLY outstatements RCURLY

    INT  shift, and go to state 4

    constdecl  go to state 12
    type       go to state 8


State 10

   27 id: ID •

    $default  reduce using rule 27 (id)


State 11

    4 constdecl: type id • ASSIGN intlit SEMICOL
    5          | type id • ASSIGN LCURLY intlist RCURLY SEMICOL

    ASSIGN  shift, and go to state 13


State 12

    9 forstatement: FOR LPAREN constdecl • expr SEMICOL unarystmt RPAREN LCURLY forstatement RCURLY
   10             | FOR LPAREN constdecl • expr SEMICOL unarystmt RPAREN LCURLY outstatements RCURLY

    ID          shift, and go to state 10
    INTLITERAL  shift, and go to state 14
    LPAREN      shift, and go to state 15

    expr    go to state 16
    term    go to state 17
    factor  go to state 18
    intlit  go to state 19
    loc     go to state 20
    id      go to state 21


State 13

    4 constdecl: type id ASSIGN • intlit SEMICOL
    5          | type id ASSIGN • LCURLY intlist RCURLY SEMICOL

    INTLITERAL  shift, and go to state 14
    LCURLY      shift, and go to state 22

    intlit  go to state 23


State 14

   24 intlit: INTLITERAL •

    $default  reduce using rule 24 (intlit)


State 15

   21 term: LPAREN • expr RPAREN

    ID          shift, and go to state 10
    INTLITERAL  shift, and go to state 14
    LPAREN      shift, and go to state 15

    expr    go to state 24
    term    go to state 17
    factor  go to state 18
    intlit  go to state 19
    loc     go to state 20
    id      go to state 21


State 16

    9 forstatement: FOR LPAREN constdecl expr • SEMICOL unarystmt RPAREN LCURLY forstatement RCURLY
   10             | FOR LPAREN constdecl expr • SEMICOL unarystmt RPAREN LCURLY outstatements RCURLY
   15 expr: expr • CROSS expr
   16     | expr • LESS expr
   17     | expr • STAR expr

    LESS     shift, and go to state 25
    CROSS    shift, and go to state 26
    SEMICOL  shift, and go to state 27
    STAR     shift, and go to state 28


State 17

   18 expr: term •

    $default  reduce using rule 18 (expr)


State 18

   20 term: factor •

    $default  reduce using rule 20 (term)


State 19

   22 factor: intlit •

    $default  reduce using rule 22 (factor)


State 20

   23 factor: loc •

    $default  reduce using rule 23 (factor)


State 21

   25 loc: id •
   26    | id • LBRACKET id RBRACKET

    LBRACKET  shift, and go to state 29

    $default  reduce using rule 25 (loc)


State 22

    5 constdecl: type id ASSIGN LCURLY • intlist RCURLY SEMICOL

    INTLITERAL  shift, and go to state 14

    $default  reduce using rule 8 (intlist)

    intlist  go to state 30
    intlit   go to state 31


State 23

    4 constdecl: type id ASSIGN intlit • SEMICOL

    SEMICOL  shift, and go to state 32


State 24

   15 expr: expr • CROSS expr
   16     | expr • LESS expr
   17     | expr • STAR expr
   21 term: LPAREN expr • RPAREN

    LESS    shift, and go to state 25
    CROSS   shift, and go to state 26
    RPAREN  shift, and go to state 33
    STAR    shift, and go to state 28


State 25

   16 expr: expr LESS • expr

    ID          shift, and go to state 10
    INTLITERAL  shift, and go to state 14
    LPAREN      shift, and go to state 15

    expr    go to state 34
    term    go to state 17
    factor  go to state 18
    intlit  go to state 19
    loc     go to state 20
    id      go to state 21


State 26

   15 expr: expr CROSS • expr

    ID          shift, and go to state 10
    INTLITERAL  shift, and go to state 14
    LPAREN      shift, and go to state 15

    expr    go to state 35
    term    go to state 17
    factor  go to state 18
    intlit  go to state 19
    loc     go to state 20
    id      go to state 21


State 27

    9 forstatement: FOR LPAREN constdecl expr SEMICOL • unarystmt RPAREN LCURLY forstatement RCURLY
   10             | FOR LPAREN constdecl expr SEMICOL • unarystmt RPAREN LCURLY outstatements RCURLY

    ID  shift, and go to state 10

    unarystmt  go to state 36
    loc        go to state 37
    id         go to state 21


State 28

   17 expr: expr STAR • expr

    ID          shift, and go to state 10
    INTLITERAL  shift, and go to state 14
    LPAREN      shift, and go to state 15

    expr    go to state 38
    term    go to state 17
    factor  go to state 18
    intlit  go to state 19
    loc     go to state 20
    id      go to state 21


State 29

   26 loc: id LBRACKET • id RBRACKET

    ID  shift, and go to state 10

    id  go to state 39


State 30

    5 constdecl: type id ASSIGN LCURLY intlist • RCURLY SEMICOL

    RCURLY  shift, and go to state 40


State 31

    6 intlist: intlit • COMMA intlist
    7        | intlit •

    COMMA  shift, and go to state 41

    $default  reduce using rule 7 (intlist)


State 32

    4 constdecl: type id ASSIGN intlit SEMICOL •

    $default  reduce using rule 4 (constdecl)


State 33

   21 term: LPAREN expr RPAREN •

    $default  reduce using rule 21 (term)


State 34

   15 expr: expr • CROSS expr
   16     | expr • LESS expr
   16     | expr LESS expr •
   17     | expr • STAR expr

    CROSS  shift, and go to state 26
    STAR   shift, and go to state 28

    $default  reduce using rule 16 (expr)


State 35

   15 expr: expr • CROSS expr
   15     | expr CROSS expr •
   16     | expr • LESS expr
   17     | expr • STAR expr

    STAR  shift, and go to state 28

    $default  reduce using rule 15 (expr)


State 36

    9 forstatement: FOR LPAREN constdecl expr SEMICOL unarystmt • RPAREN LCURLY forstatement RCURLY
   10             | FOR LPAREN constdecl expr SEMICOL unarystmt • RPAREN LCURLY outstatements RCURLY

    RPAREN  shift, and go to state 42


State 37

   19 unarystmt: loc • POSTINC

    POSTINC  shift, and go to state 43


State 38

   15 expr: expr • CROSS expr
   16     | expr • LESS expr
   17     | expr • STAR expr
   17     | expr STAR expr •

    $default  reduce using rule 17 (expr)


State 39

   26 loc: id LBRACKET id • RBRACKET

    RBRACKET  shift, and go to state 44


State 40

    5 constdecl: type id ASSIGN LCURLY intlist RCURLY • SEMICOL

    SEMICOL  shift, and go to state 45


State 41

    6 intlist: intlit COMMA • intlist

    INTLITERAL  shift, and go to state 14

    $default  reduce using rule 8 (intlist)

    intlist  go to state 46
    intlit   go to state 31


State 42

    9 forstatement: FOR LPAREN constdecl expr SEMICOL unarystmt RPAREN • LCURLY forstatement RCURLY
   10             | FOR LPAREN constdecl expr SEMICOL unarystmt RPAREN • LCURLY outstatements RCURLY

    LCURLY  shift, and go to state 47


State 43

   19 unarystmt: loc POSTINC •

    $default  reduce using rule 19 (unarystmt)


State 44

   26 loc: id LBRACKET id RBRACKET •

    $default  reduce using rule 26 (loc)


State 45

    5 constdecl: type id ASSIGN LCURLY intlist RCURLY SEMICOL •

    $default  reduce using rule 5 (constdecl)


State 46

    6 intlist: intlit COMMA intlist •

    $default  reduce using rule 6 (intlist)


State 47

    9 forstatement: FOR LPAREN constdecl expr SEMICOL unarystmt RPAREN LCURLY • forstatement RCURLY
   10             | FOR LPAREN constdecl expr SEMICOL unarystmt RPAREN LCURLY • outstatements RCURLY

    FOR  shift, and go to state 5
    OUT  shift, and go to state 48

    forstatement   go to state 49
    outstatements  go to state 50
    outstatement   go to state 51


State 48

   13 outstatement: OUT • ASSIGN expr SEMICOL

    ASSIGN  shift, and go to state 52


State 49

    9 forstatement: FOR LPAREN constdecl expr SEMICOL unarystmt RPAREN LCURLY forstatement • RCURLY

    RCURLY  shift, and go to state 53


State 50

   10 forstatement: FOR LPAREN constdecl expr SEMICOL unarystmt RPAREN LCURLY outstatements • RCURLY
   11 outstatements: outstatements • outstatement

    RCURLY  shift, and go to state 54
    OUT     shift, and go to state 48

    outstatement  go to state 55


State 51

   12 outstatements: outstatement •

    $default  reduce using rule 12 (outstatements)


State 52

   13 outstatement: OUT ASSIGN • expr SEMICOL

    ID          shift, and go to state 10
    INTLITERAL  shift, and go to state 14
    LPAREN      shift, and go to state 15

    expr    go to state 56
    term    go to state 17
    factor  go to state 18
    intlit  go to state 19
    loc     go to state 20
    id      go to state 21


State 53

    9 forstatement: FOR LPAREN constdecl expr SEMICOL unarystmt RPAREN LCURLY forstatement RCURLY •

    $default  reduce using rule 9 (forstatement)


State 54

   10 forstatement: FOR LPAREN constdecl expr SEMICOL unarystmt RPAREN LCURLY outstatements RCURLY •

    $default  reduce using rule 10 (forstatement)


State 55

   11 outstatements: outstatements outstatement •

    $default  reduce using rule 11 (outstatements)


State 56

   13 outstatement: OUT ASSIGN expr • SEMICOL
   15 expr: expr • CROSS expr
   16     | expr • LESS expr
   17     | expr • STAR expr

    LESS     shift, and go to state 25
    CROSS    shift, and go to state 26
    SEMICOL  shift, and go to state 57
    STAR     shift, and go to state 28


State 57

   13 outstatement: OUT ASSIGN expr SEMICOL •

    $default  reduce using rule 13 (outstatement)
